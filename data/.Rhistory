maxRevenue <- movies[order(-revenue),]
maxRevenue <- select(maxRevenue, revenue, genres, title)
maxRevenue <- head(maxRevenue,20)
#las peliculas de que genero prinipal obtuvieron mayores ganancias
maxRevenue <- movies[order(-revenue),]
maxRevenue <- select(maxRevenue, title, revenue, genres)
#las peliculas de que genero prinipal obtuvieron mayores ganancias
maxRevenue <- movies[order(-revenue),]
maxRevenue <- select(maxRevenue, original_title, revenue, genres)
maxRevenue <- head(maxRevenue,20)
maxRevenue
#Separando generos
splitMaxRevenue <- c(maxRevenue$genres)
splitMaxRevenue <- strsplit(splitMaxRevenue, "|", fixed = TRUE)
splitMaxRevenue <- unlist(splitMaxRevenue)
splitMaxRevenue <- table(splitMaxRevenue)
#grepl, grep, gesup, strsplit
barplot(splitMaxRevenue, horiz = TRUE, xlab = 'Frecuencia', main = 'Generos mas frecuentes', col=col3, las = 1)
#las peliculas de que genero prinipal obtuvieron mayores ganancias
maxRevenue <- movies[order(-revenue),]
maxRevenue <- select(maxRevenue, original_title, revenue, genres)
maxRevenue <- head(maxRevenue,20)
maxRevenue
#Separando generos
splitMaxRevenue <- str_split_fixed(maxRevenue$genres, "|", 1)
splitMaxRevenue <- table(splitMaxRevenue)
#grepl, grep, gesup, strsplit
barplot(splitMaxRevenue, horiz = TRUE, xlab = 'Frecuencia', main = 'Generos mas frecuentes', col=col3, las = 1)
#las peliculas de que genero prinipal obtuvieron mayores ganancias
maxRevenue <- movies[order(-revenue),]
maxRevenue <- select(maxRevenue, original_title, revenue, genres)
maxRevenue <- head(maxRevenue,20)
maxRevenue
#Separando generos
splitMaxRevenue <- str_split_fixed(maxRevenue$genres, "|", 1)
splitMaxRevenue
#las peliculas de que genero prinipal obtuvieron mayores ganancias
maxRevenue <- movies[order(-revenue),]
maxRevenue <- select(maxRevenue, original_title, revenue, genres)
maxRevenue <- head(maxRevenue,20)
maxRevenue
maxRevenue$genres
splitmaxRevenue <- str_split_fixed(maxRevenue$genres, "|", 1)
splitmaxRevenue <- table(splitPopMovies)
splitmaxRevenue
#20 peliculas mas populares y genero
popMovies <- movies[order(-movies$vote_average),]
popMovies <- head(popMovies, 20)
library(dplyr)
popMovies <- select(popMovies, original_title, genres)
popMovies
#Separando generos
splitPopMovies <- str_split_fixed(popMovies$genres, "|", 1)
splitPopMovies <- table(splitPopMovies)
col2 <- brewer.pal(12,'Paired')
barplot(splitPopMovies, ylab = 'Frecuencia', main = 'Generos de 20 peliculas mas populares', col=col2, las=3)
###test
x <- movies[order(-revenue),]
###test
x <- movies[order(-revenue),]
x <- head(x, 20)
x <- select(x, original_title, genres)
popMovies
x
#Separando generos
splitx <- str_split_fixed(x$genres, "|", 1)
splitx
splitPopMovies <- table(splitPopMovies)
splitx <- table(splitPopMovies)
splitx <- table(splitx)
splitx
splitPopMovies
setwd("C:/Users/Kevin Macario/Desktop/Uvg/9no Semestre/Mineria de Datos/HT1DataMining/data")
movies <- read.csv('tmdb-movies.csv')
show(movies)
#pelicula mas votada
maxVote <- which(movies$vote_count == max(movies$vote_count))
movies[maxVote,]
#pelicula peor votada
worstMovie <- which(movies$vote_average == min(movies$vote_average))
movies[worstMovie,]
#anios en los que mas se hicieron peliculas
library(RColorBrewer)
col1 <- brewer.pal(12,'Set3')
realiseYear <- table(movies$release_year)
barplot(realiseYear, ylab = 'Frecuencia', main = 'Peliculas por anio', col=col1, las=3)
#20 peliculas mas populares y genero
popMovies <- movies[order(-movies$vote_average),]
popMovies <- head(popMovies, 20)
library(dplyr)
popMovies <- select(popMovies, original_title, genres)
popMovies
#Separando generos
splitPopMovies <- str_split_fixed(popMovies$genres, "|", 1)
splitPopMovies <- table(splitPopMovies)
splitPopMovies
col2 <- brewer.pal(12,'Paired')
barplot(splitPopMovies, ylab = 'Frecuencia', main = 'Generos de 20 peliculas mas populares', col=col2, las=3)
#20 peliculas mas populares y genero
popMovies <- movies[order(-movies$vote_average),]
popMovies <- head(popMovies, 20)
library(dplyr)
popMovies <- select(popMovies, original_title, genres)
popMovies
#Separando generos
splitPopMovies <- str_split_fixed(popMovies$genres, "|", 1)
splitPopMovies
splitPopGenres <- table(splitPopGenres)
col3 <- brewer.pal(9,'Pastel1')
#generos que predominan en la base de datos
#Separando generos
splitPopGenres <- c(movies$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
col3 <- brewer.pal(9,'Pastel1')
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = '10 Generos mas frecuentes', col=col3, las = 1)
#generos que predominan en la base de datos
#Separando generos
splitPopGenres <- c(movies$genres)
splitPopGenres
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres
splitPopGenres <- table(splitPopGenres)
splitPopGenres
#generos que predominan en la base de datos
#Separando generos
splitPopGenres <- c(movies$genres)
splitPopGenres
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres
###test
x <- movies[order(-revenue),]
x
library(dplyr)
x <- select(x, original_title, genres)
x <- c(x$genres)
#Separando generos
splitx <- str_split_fixed(x$genres, "|", 1)
###test
x <- movies[order(-revenue),]
x
x <- head(x, 20)
x
library(dplyr)
#x <- select(x, original_title, genres)
x <- c(x$genres)
#Separando generos
splitx <- str_split_fixed(x, "|", 1)
splitx
###test
x <- movies[order(-revenue),]
x
#x <- head(x, 20)
x
library(dplyr)
#x <- select(x, original_title, genres)
x <- c(x$genres)
#Separando generos
splitx <- str_split_fixed(x, "|", 1)
splitx
###test
x <- c(movies$genres)
x
x <- strsplit(x, "|", fixed = TRUE)
x
###test
x <- c(movies$genres)
x
x <- strsplit(x, split = "|")
x
###test
x <- rownames(movies)
x
###test
x <- rownames(movies$genres)
x
###test
x <- rownames(movies)
x
head(x)
x
###test
x <- c(movies$genres)
x
x <- strsplit(x, split = "|", fixed = "|")
x
###test
x <- c(movies$genres)
x
x <- strsplit(x, split = "|", fixed = "|")
x
###test
x <- c(movies$genres)
x
x <- strsplit(x, split = "|", fixed = TRUE)
x
x <- fist(x)
x <- first(x)
x
###test
x <- c(movies$genres)
x
x <- strsplit(x, split = "|", fixed = TRUE)
x
x <- first(x,1)
x
###test
x <- c(movies$genres)
x <- strsplit(movies$gengres, split = "|", fixed = TRUE)
x <- strsplit(movies$genres, split = "|", fixed = TRUE)
x
x <- str_extract(movies$genres)
x <- str_extract(movies$genres, "(\w+)")
x <- strsplit(movies$genres, split = "|", fixed = TRUE)
x
x <- str_extract(movies$genres, "(\w+)")
x <- strsplit(movies$genres, split = "|", fixed = TRUE)
x
x <- str_extract(x$genres, "(\w+)")
x <- str_extract(x$genres, "(w+)")
x
x <- strsplit(movies$genres, split = "|", fixed = TRUE)
x
x <- str_extract(x, "(w+)")
x <- strsplit(movies$genres, split = "|", fixed = TRUE)
x
library(tidyr)
library(tidyr)
mov <- separate(movies, col = "genres", into = c("gen1", "gen2", sep = "|"))
mov
#anios en los que mas se hicieron peliculas
library(RColorBrewer)
col1 <- brewer.pal(12,'Set3')
realiseYear <- table(movies$release_year)
barplot(realiseYear, ylab = 'Frecuencia', main = 'Peliculas por anio', col=col1, las=3)
#20 peliculas mas populares y genero
popMovies <- movies[order(-movies$vote_average),]
popMovies <- head(popMovies, 20)
library(dplyr)
popMovies <- select(popMovies, original_title, genres)
popMovies
#Separando generos
splitPopMovies <- str_split_fixed(popMovies$genres, "|", 1)
splitPopMovies
splitPopMovies <- table(splitPopMovies)
splitPopMovies
col2 <- brewer.pal(12,'Paired')
barplot(splitPopMovies, ylab = 'Frecuencia', main = 'Generos de 20 peliculas mas populares', col=col2, las=3)
#20 peliculas mas populares y genero
popMovies <- mov[order(-vote_average),]
popMovies <- head(popMovies, 20)
popMovies
table(popMovies$gen1)
#20 peliculas mas populares y genero
popMovies <- mov[order(-vote_average),]
popMovies <- head(popMovies, 20)
popMovies <- table(popMovies$gen1)
library(dplyr)
col2 <- brewer.pal(12,'Paired')
barplot(popMovies, ylab = 'Frecuencia', main = 'Generos de 20 peliculas mas populares', col=col2, las=3)
#las peliculas de que genero prinipal obtuvieron mayores ganancias
maxRevenue <- mov[order(-revenue),]
maxRevenue <- select(maxRevenue, original_title, revenue, genres)
#las peliculas de que genero prinipal obtuvieron mayores ganancias
maxRevenue <- mov[order(-revenue),]
maxRevenue <- select(maxRevenue, original_title, revenue, gen1)
maxRevenue <- head(maxRevenue,20)
maxRevenue$genres
#las peliculas de que genero prinipal obtuvieron mayores ganancias
maxRevenue <- mov[order(-revenue),]
maxRevenue <- head(maxRevenue,20)
maxRevenue
maxRevenue <- select(maxRevenue, original_title, revenue, gen1)
maxRevenue$genres
#las peliculas de que genero prinipal obtuvieron mayores ganancias
maxRevenue <- mov[order(-revenue),]
maxRevenue <- head(maxRevenue,20)
maxRevenue$genres
#las peliculas de que genero prinipal obtuvieron mayores ganancias
mostRevenue <- mov[order(-revenue),]
mostRevenue <- table(mostRevenue$gen1)
library(dplyr)
#grepl, grep, gesup, strsplit
barplot(splitMaxRevenue, horiz = TRUE, xlab = 'Frecuencia', main = 'Generos mas frecuentes', col=col3, las = 1)
#grepl, grep, gesup, strsplit
barplot(mostRevenue, horiz = TRUE, xlab = 'Frecuencia', main = 'Generos mas frecuentes', col=col3, las = 1)
setwd("C:/Users/Kevin Macario/Desktop/Uvg/9no Semestre/Mineria de Datos/HT1DataMining/data")
movies <- read.csv('tmdb-movies.csv')
show(movies)
library(tidyr)
mov <- separate(movies, col = "genres", into = c("gen1", "gen2", sep = "|"))
#pelicula mas votada
maxVote <- which(movies$vote_count == max(movies$vote_count))
movies[maxVote,]
#pelicula peor votada
worstMovie <- which(movies$vote_average == min(movies$vote_average))
movies[worstMovie,]
#anios en los que mas se hicieron peliculas
library(RColorBrewer)
col1 <- brewer.pal(12,'Set3')
realiseYear <- table(movies$release_year)
barplot(realiseYear, ylab = 'Frecuencia', main = 'Peliculas por anio', col=col1, las=3)
#20 peliculas mas populares y genero
popMovies <- mov[order(-vote_average),]
popMovies <- head(popMovies, 20)
popMovies <- table(popMovies$gen1)
library(dplyr)
col2 <- brewer.pal(12,'Paired')
barplot(popMovies, ylab = 'Frecuencia', main = 'Generos de 20 peliculas mas populares', col=col2, las=3)
#generos que predominan en la base de datos
#Separando generos
splitPopGenres <- c(movies$genres)
splitPopGenres
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres
splitPopGenres <- table(splitPopGenres)
splitPopGenres
col3 <- brewer.pal(9,'Pastel1')
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = '10 Generos mas frecuentes', col=col3, las = 1)
#las peliculas de que genero prinipal obtuvieron mayores ganancias
mostRevenue <- mov[order(-revenue),]
mostRevenue <- head(mostRevenue, 20)
mostRevenue <- table(mostRevenue$gen1)
library(dplyr)
#grepl, grep, gesup, strsplit
barplot(mostRevenue, horiz = TRUE, xlab = 'Frecuencia', main = 'Generos mas frecuentes', col=col3, las = 1)
#las peliculas de que genero prinipal obtuvieron menores ganancias
lessRevenue <- mov[order(revenue),]
lessRevenue <- head(lessRevenue, 20)
lessRevenue <- table(lessRevenue$gen1)
library(dplyr)
barplot(lessRevenue, horiz = TRUE, xlab = 'Frecuencia', main = 'Generos mas frecuentes', col=col3, las = 1)
setwd("C:/Users/Kevin Macario/Desktop/Uvg/9no Semestre/Mineria de Datos/HT1DataMining/data")
movies <- read.csv('tmdb-movies.csv')
show(movies)
library(tidyr)
mov <- separate(movies, col = "genres", into = c("gen1", "gen2", sep = "|"))
#pelicula mas votada
maxVote <- which(movies$vote_count == max(movies$vote_count))
movies[maxVote,]
#pelicula peor votada
worstMovie <- which(movies$vote_average == min(movies$vote_average))
movies[worstMovie,]
#anios en los que mas se hicieron peliculas
library(RColorBrewer)
col1 <- brewer.pal(12,'Set3')
realiseYear <- table(movies$release_year)
barplot(realiseYear, ylab = 'Frecuencia', main = 'Peliculas por anio', col=col1, las=3)
#20 peliculas mas populares y genero
popMovies <- mov[order(-vote_average),]
popMovies <- head(popMovies, 20)
popMovies <- table(popMovies$gen1)
library(dplyr)
col2 <- brewer.pal(12,'Paired')
barplot(popMovies, ylab = 'Frecuencia', main = 'Generos de 20 peliculas mas populares', col=col2, las=3)
#generos que predominan en la base de datos
#Separando generos
splitPopGenres <- c(movies$genres)
splitPopGenres
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres
splitPopGenres <- table(splitPopGenres)
splitPopGenres
col3 <- brewer.pal(9,'Pastel1')
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = '10 Generos mas frecuentes', col=col3, las = 1)
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = '10 Generos mas frecuentes en base de datos', col=col3, las = 1)
#las peliculas de que genero prinipal obtuvieron mayores ganancias
mostRevenue <- mov[order(-revenue),]
mostRevenue <- head(mostRevenue, 20)
mostRevenue <- table(mostRevenue$gen1)
library(dplyr)
barplot(mostRevenue, horiz = TRUE, xlab = 'Frecuencia', main = 'Generos mas frecuentes', col=col3, las = 1)
#las peliculas de que genero prinipal obtuvieron menores ganancias
lessRevenue <- mov[order(revenue),]
lessRevenue <- head(lessRevenue, 20)
setwd("C:/Users/Kevin Macario/Desktop/Uvg/9no Semestre/Mineria de Datos/HT1DataMining/data")
movies <- read.csv('tmdb-movies.csv')
show(movies)
library(tidyr)
mov <- separate(movies, col = "genres", into = c("primary_genre", "secondary_genre", sep = "|"))
#pelicula mas votada
maxVote <- which(movies$vote_count == max(movies$vote_count))
movies[maxVote,]
#pelicula peor votada
worstMovie <- which(movies$vote_average == min(movies$vote_average))
movies[worstMovie,]
#anios en los que mas se hicieron peliculas
library(RColorBrewer)
col1 <- brewer.pal(12,'Set3')
realiseYear <- table(movies$release_year)
barplot(realiseYear, ylab = 'Frecuencia', main = 'Peliculas por anio', col=col1, las=3)
#20 peliculas mas populares y genero
popMovies <- mov[order(-vote_average),]
popMovies <- head(popMovies, 20)
popMovies <- table(popMovies$gen1)
library(dplyr)
col2 <- brewer.pal(12,'Paired')
barplot(popMovies, ylab = 'Frecuencia', main = 'Generos de 20 peliculas mas populares', col=col2, las=3)
#20 peliculas mas populares y genero
popMovies <- mov[order(-vote_average),]
popMovies <- head(popMovies, 20)
popMovies <- table(popMovies$primary_genre)
library(dplyr)
col2 <- brewer.pal(12,'Paired')
barplot(popMovies, ylab = 'Frecuencia', main = 'Generos de 20 peliculas mas populares', col=col2, las=3)
#generos que predominan en la base de datos
#Separando generos
splitPopGenres <- c(movies$genres)
splitPopGenres
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres
splitPopGenres <- table(splitPopGenres)
splitPopGenres
col3 <- brewer.pal(9,'Pastel1')
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = '10 Generos mas frecuentes en base de datos', col=col3, las = 1)
#las peliculas de que genero prinipal obtuvieron mayores ganancias
mostRevenue <- mov[order(-revenue),]
mostRevenue <- head(mostRevenue, 20)
select(mostRevenue, original_title, revenue, primary_genre)
#las peliculas de que genero prinipal obtuvieron menores ganancias
lessRevenue <- mov[order(revenue),]
lessRevenue <- head(lessRevenue, 20)
select(mostRevenue, original_title, revenue, primary_genre)
#las peliculas de que genero prinipal obtuvieron menores ganancias
lessRevenue <- mov[order(revenue),]
lessRevenue <- head(lessRevenue, 20)
select(lessRevenue, original_title, revenue, primary_genre)
#las peliculas de que genero prinipal obtuvieron menores ganancias
cleanMov <- -mov[mov$revenue == 0,]
#las peliculas de que genero prinipal obtuvieron menores ganancias
lessRevenue <- mov[order(revenue),]
lessRevenue <- head(lessRevenue, 20)
#las peliculas de que genero prinipal obtuvieron menores ganancias
lessRevenue <- mov[order(revenue),]
cleanMov <- -mov[mov$revenue == 0,]
#las peliculas de que genero prinipal obtuvieron menores ganancias
lessRevenue <- mov[order(revenue),]
cleanMov <- mov[mov$revenue == 0,]
lessRevenue <- head(lessRevenue, 20)
select(lessRevenue, original_title, revenue, primary_genre)
#las peliculas de que genero prinipal obtuvieron menores ganancias
cleanMov <- mov[mov$revenue == 0,]
lessRevenue <- cleanMov[order(revenue),]
lessRevenue <- head(lessRevenue, 20)
select(lessRevenue, original_title, revenue, primary_genre)
#las peliculas de que genero prinipal obtuvieron menores ganancias
cleanMov <- mov[mov$revenue != 0,]
lessRevenue <- cleanMov[order(revenue),]
lessRevenue <- head(lessRevenue, 20)
select(lessRevenue, original_title, revenue, primary_genre)
#las peliculas de que genero prinipal obtuvieron menores ganancias
cleanMov <- mov[mov$revenue != 0,]
revenueOrder <- order(cleanMov$revenue)
cleanMov <- cleanMov[revenueOrder,]
lessRevenue <- cleanMov[order(revenue),]
lessRevenue <- head(lessRevenue, 20)
select(lessRevenue, original_title, revenue, primary_genre)
setwd("C:/Users/Kevin Macario/Desktop/Uvg/9no Semestre/Mineria de Datos/HT1DataMining/data")
movies <- read.csv('tmdb-movies.csv')
show(movies)
library(tidyr)
mov <- separate(movies, col = "genres", into = c("primary_genre", "secondary_genre", sep = "|"))
#pelicula mas votada
maxVote <- which(movies$vote_count == max(movies$vote_count))
movies[maxVote,]
#pelicula peor votada
worstMovie <- which(movies$vote_average == min(movies$vote_average))
movies[worstMovie,]
#anios en los que mas se hicieron peliculas
library(RColorBrewer)
col1 <- brewer.pal(12,'Set3')
realiseYear <- table(movies$release_year)
barplot(realiseYear, ylab = 'Frecuencia', main = 'Peliculas por anio', col=col1, las=3)
#20 peliculas mas populares y genero
popMovies <- mov[order(-vote_average),]
popMovies <- head(popMovies, 20)
popMovies <- table(popMovies$primary_genre)
library(dplyr)
col2 <- brewer.pal(12,'Paired')
barplot(popMovies, ylab = 'Frecuencia', main = 'Generos de 20 peliculas mas populares', col=col2, las=3)
#generos que predominan en la base de datos
#Separando generos
splitPopGenres <- c(movies$genres)
splitPopGenres
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres
splitPopGenres <- table(splitPopGenres)
splitPopGenres
col3 <- brewer.pal(9,'Pastel1')
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = '10 Generos mas frecuentes en base de datos', col=col3, las = 1)
#las peliculas de que genero prinipal obtuvieron mayores ganancias
mostRevenue <- mov[order(-revenue),]
mostRevenue <- head(mostRevenue, 20)
select(mostRevenue, original_title, revenue, primary_genre)
#las peliculas de que genero prinipal obtuvieron menores ganancias
cleanMov <- mov[mov$revenue != 0,]
revenueOrder <- order(cleanMov$revenue)
cleanMov <- cleanMov[revenueOrder,]
lessRevenue <- cleanMov[order(revenue),]
lessRevenue <- head(lessRevenue, 20)
select(lessRevenue, original_title, revenue, primary_genre)
